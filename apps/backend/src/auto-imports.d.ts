/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const Container: typeof import('brandi')['Container']
  const db: typeof import('./db/index')['default']
  const drizzle: typeof import('drizzle-orm')['drizzle']
  const entityDefaultColumns: typeof import('./db/defaultColumns')['entityDefaultColumns']
  const entityDefauuserltColumns: typeof import('./db/defaultColumns')['entityDefauuserltColumns']
  const eq: typeof import('drizzle-orm')['eq']
  const getFilters: typeof import('./db/helpers')['getFilters']
  const getFullText: typeof import('./db/helpers')['getFullText']
  const getHas: typeof import('./db/helpers')['getHas']
  const getInclude: typeof import('./db/helpers')['getInclude']
  const getOffsetAndLimit: typeof import('./db/helpers')['getOffsetAndLimit']
  const getOrderBy: typeof import('./db/helpers')['getOrderBy']
  const getPageNumberAndPageSize: typeof import('./db/helpers')['getPageNumberAndPageSize']
  const getRange: typeof import('./db/helpers')['getRange']
  const injected: typeof import('brandi')['injected']
  const jsonbArray: typeof import('./db/customTypes')['jsonbArray']
  const querystringToSelect: typeof import('./db/helpers')['querystringToSelect']
  const token: typeof import('brandi')['token']
}
